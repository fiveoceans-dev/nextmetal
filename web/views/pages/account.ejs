<%# pages/account.ejs %>

  <%- include('../temp', { title: 'Next Metal - Account Page' , description: 'Members Only Account Page' , body: `

  <main>
    <header class="topbar">
      <div class="left">
        <div class="logo-metal">
          <a href="/">
            <img src="/images/nextmetal_background.svg" alt="Next Metal">
            <div class="logo">NextMetal</div>
          </a>
        </div>
        <div class="workspace">Workspace</div>
        <button class="btn">Connect</button>
      </div>
      <div class="center">
        <a class="search" href="/">Home</a>
      </div>
      <div class="right">
        <svg class="icon-btn" viewBox="0 0 24 24">
          <circle cx="12" cy="12" r="10" />
        </svg>
        <div class="avatar"><img src="/images/band.jpg" alt="avatar"></div>
      </div>
    </header>

    <div class="container">
      <!--  NAVIGATION  -->
      <nav class="iconbar">
        <a href="storage" class="icon-link" title="Storage">
          <span class="bp5-icon bp5-icon-cloud bp5-icon-large"></span>
          <span class="icon-label">Storage</span>
        </a>

        <a href="hosting" class="icon-link" title="Hosting">
          <span class="bp5-icon bp5-icon-server bp5-icon-large"></span>
          <span class="icon-label">Hosting</span>
        </a>

        <a href="database" class="icon-link" title="Database">
          <span class="bp5-icon bp5-icon-database bp5-icon-large"></span>
          <span class="icon-label">Database</span>
        </a>

        <a href="models" class="icon-link" title="Models">
          <span class="bp5-icon bp5-icon-layout-auto bp5-icon-large"></span>
          <span class="icon-label">Models</span>
        </a>

        <a href="agents" class="icon-link" title="Agents">
          <span class="bp5-icon bp5-icon-mugshot bp5-icon-large"></span>
          <span class="icon-label">Agents</span>
        </a>

        <a href="functions" class="icon-link" title="Functions">
          <span class="bp5-icon bp5-icon-function bp5-icon-large"></span>
          <span class="icon-label">Functions</span>
        </a>
      </nav>


      <!-- sidebar -->
      <aside class="sidebar">
        <div class="section">
          <h2>Storage</h2>
          <button class="new-btn">+ New bucket</button>
          <div class="search"><input placeholder="Search bucketsâ€¦" /></div>
          <div class="list-empty">No buckets yet<br /><small>Create one to get started</small></div>
        </div>
        <div class="section">
          <h2>Configuration</h2>
          <a href="#"><svg viewBox="0 0 24 24">
              <circle cx="12" cy="12" r="10" />
            </svg>Policies</a>
          <a href="#"><svg viewBox="0 0 24 24">
              <rect x="4" y="4" width="16" height="16" rx="2" />
            </svg>Settings</a>
        </div>
      </aside>
      <!-- main -->
      <div class="main">
        <div class="page-header">
          <h1>Visual Flow</h1>
          <button class="action-btn">Save</button>
        </div>
        <div id="flow-root"></div>
      </div>
    </div>
    </main>
    <script>
      const { ReactFlow, addEdge, MiniMap, Controls, Background } = window.ReactFlow;
      const { createElement, useState, useCallback } = React;

      function FlowExample() {
        const initialNodes = [
          { id: '1', position: { x: 0, y: 0 }, data: { label: 'Input' }, type: 'input' },
          { id: '2', position: { x: 200, y: 0 }, data: { label: 'Processing' } },
          { id: '3', position: { x: 400, y: 0 }, data: { label: 'Output' }, type: 'output' }
        ];
        const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }, { id: 'e2-3', source: '2', target: '3' }];

        const [nodes, setNodes] = useState(initialNodes);
        const [edges, setEdges] = useState(initialEdges);

        const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);

        return createElement(ReactFlow, {
          nodes, edges, onConnect, fitView: true,
          children: [createElement(MiniMap, { key: 'minimap' }), createElement(Controls, { key: 'controls' }), createElement(Background, { key: 'bg' })]
        });
      }

      ReactDOM.createRoot(document.getElementById('flow-root')).render(createElement(FlowExample));
    </script>
    
    `
    }) %>